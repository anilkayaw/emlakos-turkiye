#!/bin/bash

# EmlakOS T√ºrkiye - Veritabanƒ± Backup Scripti
# G√ºvenli ve otomatik backup sistemi

set -e

echo "üíæ EmlakOS T√ºrkiye Veritabanƒ± Backup Ba≈ülatƒ±lƒ±yor..."
echo "=================================================="

# Renkli √ßƒ±ktƒ± i√ßin
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Konfig√ºrasyon
BACKUP_DIR="database/backups"
DATE=$(date +"%Y%m%d_%H%M%S")
BACKUP_FILE="emlakos_backup_${DATE}.sql"
COMPRESSED_FILE="emlakos_backup_${DATE}.tar.gz"
RETENTION_DAYS=30

# Veritabanƒ± bilgileri
DB_HOST="localhost"
DB_PORT="5432"
DB_NAME="emlakos_turkiye"
DB_USER="emlakos_admin"
DB_PASSWORD="EmlakOS2024!SecureDB"

# Backup dizinini olu≈ütur
mkdir -p "$BACKUP_DIR"

echo -e "${YELLOW}üìÅ Backup dizini: ${BACKUP_DIR}${NC}"

# Veritabanƒ± baƒülantƒ±sƒ±nƒ± test et
echo -e "${YELLOW}üîç Veritabanƒ± baƒülantƒ±sƒ± test ediliyor...${NC}"
if ! PGPASSWORD="$DB_PASSWORD" pg_isready -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Veritabanƒ± baƒülantƒ±sƒ± ba≈üarƒ±sƒ±z!${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Veritabanƒ± baƒülantƒ±sƒ± ba≈üarƒ±lƒ±${NC}"

# Backup olu≈ütur
echo -e "${YELLOW}üíæ Veritabanƒ± backup'ƒ± olu≈üturuluyor...${NC}"
PGPASSWORD="$DB_PASSWORD" pg_dump \
    -h "$DB_HOST" \
    -p "$DB_PORT" \
    -U "$DB_USER" \
    -d "$DB_NAME" \
    --verbose \
    --clean \
    --create \
    --if-exists \
    --format=plain \
    --file="$BACKUP_DIR/$BACKUP_FILE"

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Backup ba≈üarƒ±yla olu≈üturuldu: ${BACKUP_FILE}${NC}"
else
    echo -e "${RED}‚ùå Backup olu≈üturulamadƒ±!${NC}"
    exit 1
fi

# Backup'ƒ± sƒ±kƒ±≈ütƒ±r
echo -e "${YELLOW}üóúÔ∏è  Backup sƒ±kƒ±≈ütƒ±rƒ±lƒ±yor...${NC}"
cd "$BACKUP_DIR"
tar -czf "$COMPRESSED_FILE" "$BACKUP_FILE"
rm "$BACKUP_FILE"
cd - > /dev/null

echo -e "${GREEN}‚úÖ Backup sƒ±kƒ±≈ütƒ±rƒ±ldƒ±: ${COMPRESSED_FILE}${NC}"

# Backup boyutunu g√∂ster
BACKUP_SIZE=$(du -h "$BACKUP_DIR/$COMPRESSED_FILE" | cut -f1)
echo -e "${BLUE}üìä Backup boyutu: ${BACKUP_SIZE}${NC}"

# Eski backup'larƒ± temizle
echo -e "${YELLOW}üßπ Eski backup'lar temizleniyor...${NC}"
find "$BACKUP_DIR" -name "emlakos_backup_*.tar.gz" -type f -mtime +$RETENTION_DAYS -delete

echo -e "${GREEN}‚úÖ ${RETENTION_DAYS} g√ºnden eski backup'lar temizlendi${NC}"

# Backup listesini g√∂ster
echo ""
echo -e "${BLUE}üìã Mevcut Backup'lar:${NC}"
ls -lh "$BACKUP_DIR"/emlakos_backup_*.tar.gz 2>/dev/null | awk '{print "  ‚Ä¢ " $9 " (" $5 ", " $6 " " $7 " " $8 ")"}' || echo "  ‚Ä¢ Hen√ºz backup yok"

# Backup doƒürulama
echo -e "${YELLOW}üîç Backup doƒürulanƒ±yor...${NC}"
if tar -tzf "$BACKUP_DIR/$COMPRESSED_FILE" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Backup dosyasƒ± ge√ßerli${NC}"
else
    echo -e "${RED}‚ùå Backup dosyasƒ± bozuk!${NC}"
    exit 1
fi

# Backup √∂zeti
echo ""
echo -e "${GREEN}üéâ Backup i≈ülemi tamamlandƒ±!${NC}"
echo "=================================================="
echo -e "${BLUE}üìä Backup √ñzeti:${NC}"
echo -e "  ‚Ä¢ Dosya: ${GREEN}${BACKUP_DIR}/${COMPRESSED_FILE}${NC}"
echo -e "  ‚Ä¢ Boyut: ${GREEN}${BACKUP_SIZE}${NC}"
echo -e "  ‚Ä¢ Tarih: ${GREEN}$(date)${NC}"
echo -e "  ‚Ä¢ Saklama: ${GREEN}${RETENTION_DAYS} g√ºn${NC}"
echo ""
echo -e "${YELLOW}üí° Restore Komutu:${NC}"
echo -e "  ${BLUE}tar -xzf ${BACKUP_DIR}/${COMPRESSED_FILE} && psql -h ${DB_HOST} -p ${DB_PORT} -U ${DB_USER} -d ${DB_NAME} -f ${BACKUP_FILE}${NC}"
echo ""
echo -e "${GREEN}‚ú® Backup sistemi aktif!${NC}"
