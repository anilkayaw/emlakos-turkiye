#!/bin/bash

# EmlakOS T√ºrkiye - T√ºm Servisleri Ba≈ülatma Scripti
# Tam s√ºr√ºm - T√ºm microservices

set -e

echo "üöÄ EmlakOS T√ºrkiye - T√ºm Servisleri Ba≈ülatƒ±lƒ±yor..."
echo "=================================================="

# Renkli √ßƒ±ktƒ± i√ßin
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Proje dizinine git
cd "$(dirname "$0")/.."

# Mevcut servisleri durdur
echo -e "${YELLOW}üõë Mevcut servisleri durduruluyor...${NC}"
pkill -f "go run main.go" 2>/dev/null || true
pkill -f "npm run dev" 2>/dev/null || true

# Docker servislerini kontrol et
echo -e "${YELLOW}üê≥ Docker servisleri kontrol ediliyor...${NC}"
if ! docker ps | grep -q "emlakos-postgres"; then
    echo -e "${RED}‚ùå PostgreSQL √ßalƒ±≈ümƒ±yor! √ñnce veritabanƒ±nƒ± ba≈ülatƒ±n.${NC}"
    echo -e "${BLUE}üí° Komut: ./scripts/start-database.sh${NC}"
    exit 1
fi

if ! docker ps | grep -q "emlakos-redis"; then
    echo -e "${RED}‚ùå Redis √ßalƒ±≈ümƒ±yor! √ñnce veritabanƒ±nƒ± ba≈ülatƒ±n.${NC}"
    echo -e "${BLUE}üí° Komut: ./scripts/start-database.sh${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Docker servisleri √ßalƒ±≈üƒ±yor${NC}"

# Auth Service ba≈ülat
echo -e "${YELLOW}üîê Auth Service ba≈ülatƒ±lƒ±yor...${NC}"
cd backend/auth-service
nohup go run main.go > ../../logs/auth-service.log 2>&1 &
AUTH_PID=$!
echo "Auth Service PID: $AUTH_PID"
cd ../..

# User Service ba≈ülat
echo -e "${YELLOW}üë§ User Service ba≈ülatƒ±lƒ±yor...${NC}"
cd backend/user-service
nohup go run main.go > ../../logs/user-service.log 2>&1 &
USER_PID=$!
echo "User Service PID: $USER_PID"
cd ../..

# Listing Service ba≈ülat
echo -e "${YELLOW}üè† Listing Service ba≈ülatƒ±lƒ±yor...${NC}"
cd backend/listing-service
nohup go run main.go > ../../logs/listing-service.log 2>&1 &
LISTING_PID=$!
echo "Listing Service PID: $LISTING_PID"
cd ../..

# Message Service ba≈ülat
echo -e "${YELLOW}üí¨ Message Service ba≈ülatƒ±lƒ±yor...${NC}"
cd backend/message-service
nohup go run main.go > ../../logs/message-service.log 2>&1 &
MESSAGE_PID=$!
echo "Message Service PID: $MESSAGE_PID"
cd ../..

# API Gateway ba≈ülat
echo -e "${YELLOW}üåê API Gateway ba≈ülatƒ±lƒ±yor...${NC}"
cd backend/api-gateway
nohup go run main.go > ../../logs/api-gateway.log 2>&1 &
GATEWAY_PID=$!
echo "API Gateway PID: $GATEWAY_PID"
cd ../..

# Frontend ba≈ülat
echo -e "${YELLOW}üé® Frontend ba≈ülatƒ±lƒ±yor...${NC}"
cd frontend/web-app
nohup npm run dev > ../../logs/frontend.log 2>&1 &
FRONTEND_PID=$!
echo "Frontend PID: $FRONTEND_PID"
cd ../..

# Log dizinini olu≈ütur
mkdir -p logs

# Servislerin ba≈ülamasƒ±nƒ± bekle
echo -e "${YELLOW}‚è≥ Servislerin ba≈ülamasƒ± bekleniyor...${NC}"
sleep 15

# Health check
echo -e "${YELLOW}üîç Servis durumu kontrol ediliyor...${NC}"

# Auth Service health check
if curl -s http://localhost:8082/api/auth/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Auth Service (8082) - √áalƒ±≈üƒ±yor${NC}"
else
    echo -e "${RED}‚ùå Auth Service (8082) - Ba≈ülamadƒ±${NC}"
fi

# User Service health check
if curl -s http://localhost:8083/api/users/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ User Service (8083) - √áalƒ±≈üƒ±yor${NC}"
else
    echo -e "${RED}‚ùå User Service (8083) - Ba≈ülamadƒ±${NC}"
fi

# Listing Service health check
if curl -s http://localhost:8084/api/listings/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Listing Service (8084) - √áalƒ±≈üƒ±yor${NC}"
else
    echo -e "${RED}‚ùå Listing Service (8084) - Ba≈ülamadƒ±${NC}"
fi

# Message Service health check
if curl -s http://localhost:8085/api/messages/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Message Service (8085) - √áalƒ±≈üƒ±yor${NC}"
else
    echo -e "${RED}‚ùå Message Service (8085) - Ba≈ülamadƒ±${NC}"
fi

# API Gateway health check
if curl -s http://localhost:8080/api/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ API Gateway (8080) - √áalƒ±≈üƒ±yor${NC}"
else
    echo -e "${RED}‚ùå API Gateway (8080) - Ba≈ülamadƒ±${NC}"
fi

# Frontend health check
if curl -s -o /dev/null -w "%{http_code}" http://localhost:3000 | grep -q "200"; then
    echo -e "${GREEN}‚úÖ Frontend (3000) - √áalƒ±≈üƒ±yor${NC}"
else
    echo -e "${RED}‚ùå Frontend (3000) - Ba≈ülamadƒ±${NC}"
fi

# PID'leri kaydet
echo "$AUTH_PID" > logs/auth-service.pid
echo "$USER_PID" > logs/user-service.pid
echo "$LISTING_PID" > logs/listing-service.pid
echo "$MESSAGE_PID" > logs/message-service.pid
echo "$GATEWAY_PID" > logs/api-gateway.pid
echo "$FRONTEND_PID" > logs/frontend.pid

echo ""
echo -e "${GREEN}üéâ T√ºm servisler ba≈ülatƒ±ldƒ±!${NC}"
echo "=================================================="
echo ""
echo -e "${BLUE}üìä Servis Bilgileri:${NC}"
echo -e "  ‚Ä¢ Frontend: ${GREEN}http://localhost:3000${NC}"
echo -e "  ‚Ä¢ API Gateway: ${GREEN}http://localhost:8080${NC}"
echo -e "  ‚Ä¢ Auth Service: ${GREEN}http://localhost:8082${NC}"
echo -e "  ‚Ä¢ User Service: ${GREEN}http://localhost:8083${NC}"
echo -e "  ‚Ä¢ Listing Service: ${GREEN}http://localhost:8084${NC}"
echo -e "  ‚Ä¢ Message Service: ${GREEN}http://localhost:8085${NC}"
echo -e "  ‚Ä¢ PostgreSQL: ${GREEN}localhost:5432${NC}"
echo -e "  ‚Ä¢ Redis: ${GREEN}localhost:6379${NC}"
echo -e "  ‚Ä¢ pgAdmin: ${GREEN}http://localhost:5050${NC}"
echo ""
echo -e "${BLUE}üìã Test Endpoints:${NC}"
echo -e "  ‚Ä¢ Frontend: ${GREEN}http://localhost:3000${NC}"
echo -e "  ‚Ä¢ API Health: ${GREEN}http://localhost:8080/api/health${NC}"
echo -e "  ‚Ä¢ Auth Health: ${GREEN}http://localhost:8082/api/auth/health${NC}"
echo -e "  ‚Ä¢ Listings: ${GREEN}http://localhost:8080/api/v1/listings${NC}"
echo -e "  ‚Ä¢ Messages: ${GREEN}http://localhost:8080/api/v1/messages/conversations${NC}"
echo ""
echo -e "${BLUE}üìÅ Log Dosyalarƒ±:${NC}"
echo -e "  ‚Ä¢ Auth Service: ${GREEN}logs/auth-service.log${NC}"
echo -e "  ‚Ä¢ User Service: ${GREEN}logs/user-service.log${NC}"
echo -e "  ‚Ä¢ Listing Service: ${GREEN}logs/listing-service.log${NC}"
echo -e "  ‚Ä¢ Message Service: ${GREEN}logs/message-service.log${NC}"
echo -e "  ‚Ä¢ API Gateway: ${GREEN}logs/api-gateway.log${NC}"
echo -e "  ‚Ä¢ Frontend: ${GREEN}logs/frontend.log${NC}"
echo ""
echo -e "${YELLOW}üí° Servisleri durdurmak i√ßin:${NC}"
echo -e "  ${BLUE}./scripts/stop-all-services.sh${NC}"
echo ""
echo -e "${GREEN}‚ú® EmlakOS T√ºrkiye tam s√ºr√ºm hazƒ±r!${NC}"
